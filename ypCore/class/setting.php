<?php /** * Load setting from datebase or cache * * @pack 	ypCore * @author 	LvDuit * @date  */class __SETTING {	private $_instance;		/**	 * Data store	 *	 * @access 	private	 */	private $_data = array();		private $_registry;		public function __construct(&$registry) {		$this->_registry = $registry;		$this->load();	}	/**	 * Get setting	 *	 * @param 	string 		 * @param 	string	 * @return 	mix	 */	public function get($setting, $type = '') {		if (!isset($this->_data[$setting])) {			return FALSE;		}		if ($type == 'string') return (string) $this->_data[$setting];		if ($type == 'int') return (int) $this->_data[$setting];		if ($type == 'bool' OR $type == 'boolean') return (boolean) $this->_data[$setting];				return $this->_data[$setting];	}	public function gets() {		return $this->_data;	}	public function set($setting, $value) {		$this->_data[$setting] = $value; // Fix loi #1				$Db = $this->Db;		$isSerialize = 0;		if (is_array($value) OR is_object($value)) {			$value = serialize($value);			$isSerialize = 1;		}		if (is_numeric($value)) {			$value = (int) $value;		} else {			$value = "'". $Db->e($value) ."'";		}		$Db->query("SELECT 1 FROM `yp_settings` WHERE `setting` = '". $Db->e($setting) . "'");		if ($Db->num_rows() == 0) {			$Db->query("INSERT INTO `yp_settings`(`setting`, `value`, `serialized`) 			VALUE ('". $Db->e($setting) ."', $value, $isSerialize)");		} else {			$Db->query("UPDATE `yp_settings` 			SET `value` = $value, `serialized` = $isSerialize			WHERE `setting` = '". $Db->e($setting) ."'");		}		$this->preLoadCache();	}	public function load($setting_module = 'system') {		if ($setting_module == 'system') {			// Load from cache			$cache = $this->Cache->get('settings');			if ($cache) {				$this->_data = array_merge($this->_data, $cache);				return TRUE;			}			$this->Db->query("SELECT * FROM `yp_settings`");			if ($this->Db->num_rows() == 0) {				return FALSE;			}			while ($row = $this->Db->fetch()) {				if ((boolean)$row['serialized']) {					$this->_data[$row['setting']] = unserialize($row['value']);				} else {					$this->_data[$row['setting']] = $row['value'];				}			}			// Set cache			$this->Cache->set('settings', $this->_data);		} else {			$setting_module = trim((string) $setting_module);			$table = 'yp_' . $setting_module . '_setting';			// Load from variable			if (isset($this->_data['settings'][$table])) {				return $this->_data['settings'][$table];			}						// Load from cache			$cache = $this->Cache->get('settings_' . $table);			if ($cache) {				$this->_data['settings'][$table] = $cache;				return $this->_data['settings'][$table];			}						// Load from database and register it to cache			$this->Db->query("SELECT * FROM `$table`");			if ($this->Db->num_rows() == 0) { 				return FALSE;			}			$settings = array();			while ($row = $this->Db->fetch()) {				$settings[$row['setting']] = $row['value'];			}			$this->_data['settings'][$table] = $settings;			// Set to cache			$this->Cache->set('settings_' . $table, $this->_data['settings'][$table]);			return $this->_data['settings'][$table];		}	}		public function preLoadCache() {		$this->Cache->delete('settings');		$this->load();	}		public function __get($key) {		return $this->_registry->get($key);	}	public function __set($key, $value) {		return $this->_registry->set($key, $value);	}}