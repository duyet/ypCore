<?php class Controller_Admin_System_Filemanager extends ypAdminController {	private $error = array();	public function Index() {		$this->loadLanguage('Admin/System/Filemanager');				if ($this->Request->GETEnv('HTTPS') 			AND (($this->Request->GETEnv('HTTPS') == 'on') OR ($this->Request->GETEnv('HTTPS') == '1'))) {			$this->set('base', HTTPS_SERVER);		} else {			$this->set('base', HTTP_SERVER);		}		$this->set('directory', APP_DOWNLOAD_DIR);		$this->Loader->helper('image');		$this->set('no_image' , ypImageResize('no_image.jpg', 100, 100));		if (isset($this->Request->GET['field'])) {			$this->set('field', $this->Request->GET['field']);		} else {			$this->set('field', '');		}		if (isset($this->Request->GET['CKEditorFuncNum'])) {			$this->set('fckeditor', $this->Request->GET['CKEditorFuncNum']);		} else {			$this->set('fckeditor', '');		}		$this->setTemplate('module/System/Filemanager.php');		$this->Response->setOutput($this->render());	}		public function Image() {		$this->load->helper('image');				if (isset($this->Request->GET['image'])) {			$image = ypImageResize(html_entity_decode($this->Request->GET['image'], ENT_QUOTES), 100, 100);			$this->Response->setOutput($image);		}	}		public function directory() {		$json = array();				if (isset($this->Request->POST['directory'])) {			$directories = glob(rtrim(APP_DOWNLOAD_DIR . '/image/data/' . str_replace('../', '', $this->Request->POST['directory']), '/') . '/*', GLOB_ONLYDIR); 						if ($directories) {				$i = 0;							foreach ($directories as $directory) {					$json[$i]['data'] = basename($directory);					$json[$i]['attributes']['directory'] = utf8_substr($directory, strlen(APP_DOWNLOAD_DIR . '/image/' . 'data/'));										$children = glob(rtrim($directory, '/') . '/*', GLOB_ONLYDIR);										if ($children)  {						$json[$i]['children'] = ' ';					}										$i++;				}			}				}				$this->Response->setOutput(json_encode($json));	}		public function files() {		$json = array();				if (!empty($this->Request->POST['directory'])) {			$directory = APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', $this->Request->POST['directory']);		} else {			$directory = APP_DOWNLOAD_DIR . '/image/' . 'data/';		}				$allowed = array(			'.jpg',			'.jpeg',			'.png',			'.gif'		);				$files = glob(rtrim($directory, '/') . '/*');				if ($files) {			foreach ($files as $file) {				if (is_file($file)) {					$ext = strrchr($file, '.');				} else {					$ext = '';				}									if (in_array(strtolower($ext), $allowed)) {					$size = filesize($file);							$i = 0;							$suffix = array(						'B',						'KB',						'MB',						'GB',						'TB',						'PB',						'EB',						'ZB',						'YB'					);							while (($size / 1024) > 1) {						$size = $size / 1024;						$i++;					}											$json[] = array(						'filename' => basename($file),						'file'     => utf8_substr($file, utf8_strlen(APP_DOWNLOAD_DIR . '/image/' . 'data/')),						'size'     => round(utf8_substr($size, 0, utf8_strpos($size, '.') + 4), 2) . $suffix[$i]					);				}			}		}				$this->Response->setOutput(json_encode($json));		}			public function create() {		$this->loadLanguage('Admin/System/Filemanager');						$json = array();				if (isset($this->Request->POST['directory'])) {			if (isset($this->Request->POST['name']) || $this->Request->POST['name']) {				$directory = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', $this->Request->POST['directory']), '/');							   								if (!is_dir($directory)) {					$json['error'] = $this->get('error_directory');				}								if (file_exists($directory . '/' . str_replace('../', '', $this->Request->POST['name']))) {					$json['error'] = $this->get('error_exists');				}			} else {				$json['error'] = $this->get('error_name');			}		} else {			$json['error'] = $this->get('error_directory');		}		//		if (!$this->user->hasPermission('modify', 'common/filemanager')) {//      		$json['error'] = $this->get('error_permission');  //    	}				if (!isset($json['error'])) {				mkdir($directory . '/' . str_replace('../', '', $this->Request->POST['name']), 0777);						$json['success'] = $this->get('text_create');		}					$this->Response->setOutput(json_encode($json));	}		public function delete() {		$this->loadLanguage('Admin/System/Filemanager');				$json = array();				if (isset($this->Request->POST['path'])) {			$path = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', html_entity_decode($this->Request->POST['path'], ENT_QUOTES, 'UTF-8')), '/');			 			if (!file_exists($path)) {				$json['error'] = $this->get('error_select');			}						if ($path == rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/', '/')) {				$json['error'] = $this->get('error_delete');			}		} else {			$json['error'] = $this->get('error_select');		}		//		if (!$this->user->hasPermission('modify', 'common/filemanager')) {//      		$json['error'] = $this->get('error_permission');  //    	}				if (!isset($json['error'])) {			if (is_file($path)) {				unlink($path);			} elseif (is_dir($path)) {				$files = array();								$path = array($path . '*');								while(count($path) != 0) {					$next = array_shift($path);								foreach(glob($next) as $file) {						if (is_dir($file)) {							$path[] = $file . '/*';						}												$files[] = $file;					}				}								rsort($files);								foreach ($files as $file) {					if (is_file($file)) {						unlink($file);					} elseif(is_dir($file)) {						rmdir($file);						} 				}							}						$json['success'] = $this->get('text_delete');		}								$this->Response->setOutput(json_encode($json));	}	public function move() {		$this->loadLanguage('Admin/System/Filemanager');				$json = array();				if (isset($this->Request->POST['from']) && isset($this->Request->POST['to'])) {			$from = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', html_entity_decode($this->Request->POST['from'], ENT_QUOTES, 'UTF-8')), '/');						if (!file_exists($from)) {				$json['error'] = $this->get('error_missing');			}						if ($from == APP_DOWNLOAD_DIR . '/image/' . 'data') {				$json['error'] = $this->get('error_default');			}						$to = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', html_entity_decode($this->Request->POST['to'], ENT_QUOTES, 'UTF-8')), '/');			if (!file_exists($to)) {				$json['error'] = $this->get('error_move');			}							if (file_exists($to . '/' . basename($from))) {				$json['error'] = $this->get('error_exists');			}		} else {			$json['error'] = $this->get('error_directory');		}				if (!$this->user->hasPermission('modify', 'common/filemanager')) {      		$json['error'] = $this->get('error_permission');      	}				if (!isset($json['error'])) {			rename($from, $to . '/' . basename($from));						$json['success'] = $this->get('text_move');		}				$this->Response->setOutput(json_encode($json));	}			public function copy() {		$this->loadLanguage('Admin/System/Filemanager');				$json = array();				if (isset($this->Request->POST['path']) && isset($this->Request->POST['name'])) {			if ((utf8_strlen($this->Request->POST['name']) < 3) || (utf8_strlen($this->Request->POST['name']) > 255)) {				$json['error'] = $this->get('error_filename');			}							$old_name = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', html_entity_decode($this->Request->POST['path'], ENT_QUOTES, 'UTF-8')), '/');						if (!file_exists($old_name) || $old_name == APP_DOWNLOAD_DIR . '/image/' . 'data') {				$json['error'] = $this->get('error_copy');			}						if (is_file($old_name)) {				$ext = strrchr($old_name, '.');			} else {				$ext = '';			}								$new_name = dirname($old_name) . '/' . str_replace('../', '', html_entity_decode($this->Request->POST['name'], ENT_QUOTES, 'UTF-8') . $ext);																			   			if (file_exists($new_name)) {				$json['error'] = $this->get('error_exists');			}					} else {			$json['error'] = $this->get('error_select');		}		//		if (!$this->user->hasPermission('modify', 'common/filemanager')) {//      		$json['error'] = $this->get('error_permission');  //    	}					if (!isset($json['error'])) {			if (is_file($old_name)) {				copy($old_name, $new_name);			} else {				$this->recursiveCopy($old_name, $new_name);			}						$json['success'] = $this->get('text_copy');		}				$this->Response->setOutput(json_encode($json));		}	function recursiveCopy($source, $destination) { 		$directory = opendir($source); 				@mkdir($destination); 				while (false !== ($file = readdir($directory))) {			if (($file != '.') && ($file != '..')) { 				if (is_dir($source . '/' . $file)) { 					$this->recursiveCopy($source . '/' . $file, $destination . '/' . $file); 				} else { 					copy($source . '/' . $file, $destination . '/' . $file); 				} 			} 		} 				closedir($directory); 	} 	public function folders() {		$this->Response->setOutput($this->recursiveFolders(APP_DOWNLOAD_DIR . '/image/' . 'data/'));		}		protected function recursiveFolders($directory) {		$output = '';				$output .= '<option value="' . utf8_substr($directory, strlen(APP_DOWNLOAD_DIR . '/image/' . 'data/')) . '">' . utf8_substr($directory, strlen(APP_DOWNLOAD_DIR . '/image/' . 'data/')) . '</option>';				$directories = glob(rtrim(str_replace('../', '', $directory), '/') . '/*', GLOB_ONLYDIR);				foreach ($directories  as $directory) {			$output .= $this->recursiveFolders($directory);		}				return $output;	}		public function rename() {		$this->loadLanguage('Admin/System/Filemanager');				$json = array();				if (isset($this->Request->POST['path']) && isset($this->Request->POST['name'])) {			if ((utf8_strlen($this->Request->POST['name']) < 3) || (utf8_strlen($this->Request->POST['name']) > 255)) {				$json['error'] = $this->get('error_filename');			}							$old_name = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', html_entity_decode($this->Request->POST['path'], ENT_QUOTES, 'UTF-8')), '/');						if (!file_exists($old_name) || $old_name == APP_DOWNLOAD_DIR . '/image/' . 'data') {				$json['error'] = $this->get('error_rename');			}						if (is_file($old_name)) {				$ext = strrchr($old_name, '.');			} else {				$ext = '';			}								$new_name = dirname($old_name) . '/' . str_replace('../', '', html_entity_decode($this->Request->POST['name'], ENT_QUOTES, 'UTF-8') . $ext);																			   			if (file_exists($new_name)) {				$json['error'] = $this->get('error_exists');			}					}		//		if (!$this->user->hasPermission('modify', 'common/filemanager')) {//      		$json['error'] = $this->get('error_permission');  //    	}				if (!isset($json['error'])) {			rename($old_name, $new_name);						$json['success'] = $this->get('text_rename');		}				$this->Response->setOutput(json_encode($json));	}		public function upload() {		$this->loadLanguage('Admin/System/Filemanager');				$json = array();				if (isset($this->Request->POST['directory'])) {			if (isset($this->Request->files['image']) && $this->Request->files['image']['tmp_name']) {				$filename = basename(html_entity_decode($this->Request->files['image']['name'], ENT_QUOTES, 'UTF-8'));								if ((strlen($filename) < 3) || (strlen($filename) > 255)) {					$json['error'] = $this->get('error_filename');				}									$directory = rtrim(APP_DOWNLOAD_DIR . '/image/' . 'data/' . str_replace('../', '', $this->Request->POST['directory']), '/');								if (!is_dir($directory)) {					$json['error'] = $this->get('error_directory');				}								if ($this->Request->files['image']['size'] > 300000) {					$json['error'] = $this->get('error_file_size');				}								$allowed = array(					'image/jpeg',					'image/pjpeg',					'image/png',					'image/x-png',					'image/gif',					'application/x-shockwave-flash'				);										if (!in_array($this->Request->files['image']['type'], $allowed)) {					$json['error'] = $this->get('error_file_type');				}								$allowed = array(					'.jpg',					'.jpeg',					'.gif',					'.png',					'.flv'				);										if (!in_array(strtolower(strrchr($filename, '.')), $allowed)) {					$json['error'] = $this->get('error_file_type');				}				if ($this->Request->files['image']['error'] != UPLOAD_ERR_OK) {					$json['error'] = 'error_upload_' . $this->Request->files['image']['error'];				}						} else {				$json['error'] = $this->get('error_file');			}		} else {			$json['error'] = $this->get('error_directory');		}		//		if (!$this->user->hasPermission('modify', 'common/filemanager')) {//      		$json['error'] = $this->get('error_permission');  //    	}				if (!isset($json['error'])) {				if (@move_uploaded_file($this->Request->files['image']['tmp_name'], $directory . '/' . $filename)) {						$json['success'] = $this->get('text_uploaded');			} else {				$json['error'] = $this->get('error_uploaded');			}		}				$this->Response->setOutput(json_encode($json));	}}